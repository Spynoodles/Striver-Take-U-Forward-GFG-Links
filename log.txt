(['.aZ2wEe>div{border-color:#4285f4}.P1ekSe-ZMv3u>div:nth-child(1){background-color:#1a73e8!important}.P1ekSe-ZMv3u>div:nth-child(2),.P1ekSe-ZMv3u>div:nth-child(3){background-image:linear-gradient(to right,rgba(255,255,255,.7),rgba(255,255,255,.7)),linear-gradient(to right,#1a73e8,#1a73e8)!important}.haAclf{display:inline-block}.nsm7Bb-HzV7m-LgbsSe{-webkit-border-radius:4px;border-radius:4px;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-transition:background-color .218s,border-color .218s;transition:background-color .218s,border-color .218s;-webkit-user-select:none;-webkit-appearance:none;background-color:#fff;background-image:none;border:1px solid #dadce0;color:#3c4043;cursor:pointer;font-family:"Google Sans",arial,sans-serif;font-size:14px;height:40px;letter-spacing:0.25px;outline:none;overflow:hidden;padding:0 12px;position:relative;text-align:center;vertical-align:middle;white-space:nowrap;width:auto}@media screen and (-ms-high-contrast:active){.nsm7Bb-HzV7m-LgbsSe{border:2px solid windowText;color:windowText}}.nsm7Bb-HzV7m-LgbsSe.pSzOP-SxQuSe{font-size:14px;height:32px;letter-spacing:0.25px;padding:0 10px}.nsm7Bb-HzV7m-LgbsSe.purZT-SxQuSe{font-size:11px;height:20px;letter-spacing:0.3px;padding:0 8px}.nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe{padding:0;width:40px}.nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe.pSzOP-SxQuSe{width:32px}.nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe.purZT-SxQuSe{width:20px}.nsm7Bb-HzV7m-LgbsSe.JGcpL-RbRzK{-webkit-border-radius:20px;border-radius:20px}.nsm7Bb-HzV7m-LgbsSe.JGcpL-RbRzK.pSzOP-SxQuSe{-webkit-border-radius:16px;border-radius:16px}.nsm7Bb-HzV7m-LgbsSe.JGcpL-RbRzK.purZT-SxQuSe{-webkit-border-radius:10px;border-radius:10px}.nsm7Bb-HzV7m-LgbsSe.MFS4be-Ia7Qfc{border:none;color:#fff}.nsm7Bb-HzV7m-LgbsSe.MFS4be-v3pZbf-Ia7Qfc{background-color:#1a73e8}.nsm7Bb-HzV7m-LgbsSe.MFS4be-JaPV2b-Ia7Qfc{background-color:#202124;color:#e8eaed}.nsm7Bb-HzV7m-LgbsSe .nsm7Bb-HzV7m-LgbsSe-Bz112c{height:18px;margin-right:8px;min-width:18px;width:18px}.nsm7Bb-HzV7m-LgbsSe.pSzOP-SxQuSe .nsm7Bb-HzV7m-LgbsSe-Bz112c{height:14px;min-width:14px;width:14px}.nsm7Bb-HzV7m-LgbsSe.purZT-SxQuSe .nsm7Bb-HzV7m-LgbsSe-Bz112c{height:10px;min-width:10px;width:10px}.nsm7Bb-HzV7m-LgbsSe.jVeSEe .nsm7Bb-HzV7m-LgbsSe-Bz112c{margin-left:8px;margin-right:-4px}.nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe .nsm7Bb-HzV7m-LgbsSe-Bz112c{margin:0;padding:10px}.nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe.pSzOP-SxQuSe .nsm7Bb-HzV7m-LgbsSe-Bz112c{padding:8px}.nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe.purZT-SxQuSe .nsm7Bb-HzV7m-LgbsSe-Bz112c{padding:4px}.nsm7Bb-HzV7m-LgbsSe .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf{-webkit-border-top-left-radius:3px;border-top-left-radius:3px;-webkit-border-bottom-left-radius:3px;border-bottom-left-radius:3px;display:-webkit-box;display:-webkit-flex;display:flex;justify-content:center;-webkit-align-items:center;align-items:center;background-color:#fff;height:36px;margin-left:-10px;margin-right:12px;min-width:36px;width:36px}.nsm7Bb-HzV7m-LgbsSe .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf .nsm7Bb-HzV7m-LgbsSe-Bz112c,.nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf .nsm7Bb-HzV7m-LgbsSe-Bz112c{margin:0;padding:0}.nsm7Bb-HzV7m-LgbsSe.pSzOP-SxQuSe .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf{height:28px;margin-left:-8px;margin-right:10px;min-width:28px;width:28px}.nsm7Bb-HzV7m-LgbsSe.purZT-SxQuSe .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf{height:16px;margin-left:-6px;margin-right:8px;min-width:16px;width:16px}.nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf{-webkit-border-radius:3px;border-radius:3px;margin-left:2px;margin-right:0;padding:0}.nsm7Bb-HzV7m-LgbsSe.JGcpL-RbRzK .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf{-webkit-border-radius:18px;border-radius:18px}.nsm7Bb-HzV7m-LgbsSe.pSzOP-SxQuSe.JGcpL-RbRzK .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf{-webkit-border-radius:14px;border-radius:14px}.nsm7Bb-HzV7m-LgbsSe.purZT-SxQuSe.JGcpL-RbRzK .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf{-webkit-border-radius:8px;border-radius:8px}.nsm7Bb-HzV7m-LgbsSe .nsm7Bb-HzV7m-LgbsSe-bN97Pc-sM5MNb{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-align-items:center;align-items:center;-webkit-flex-direction:row;flex-direction:row;justify-content:space-between;-webkit-flex-wrap:nowrap;flex-wrap:nowrap;height:100%;position:relative;width:100%}.nsm7Bb-HzV7m-LgbsSe .oXtfBe-l4eHX{justify-content:center}.nsm7Bb-HzV7m-LgbsSe .nsm7Bb-HzV7m-LgbsSe-BPrWId{-webkit-flex-grow:1;flex-grow:1;font-family:"Google Sans",arial,sans-serif;font-weight:500;overflow:hidden;text-overflow:ellipsis;vertical-align:top}.nsm7Bb-HzV7m-LgbsSe.purZT-SxQuSe .nsm7Bb-HzV7m-LgbsSe-BPrWId{font-weight:300}.nsm7Bb-HzV7m-LgbsSe .oXtfBe-l4eHX .nsm7Bb-HzV7m-LgbsSe-BPrWId{-webkit-flex-grow:0;flex-grow:0}.nsm7Bb-HzV7m-LgbsSe .nsm7Bb-HzV7m-LgbsSe-MJoBVe{-webkit-transition:background-color .218s;transition:background-color .218s;bottom:0;left:0;position:absolute;right:0;top:0}.nsm7Bb-HzV7m-LgbsSe:hover,.nsm7Bb-HzV7m-LgbsSe:focus{-webkit-box-shadow:none;box-shadow:none;border-color:#d2e3fc;outline:none}.nsm7Bb-HzV7m-LgbsSe:hover .nsm7Bb-HzV7m-LgbsSe-MJoBVe,.nsm7Bb-HzV7m-LgbsSe:focus .nsm7Bb-HzV7m-LgbsSe-MJoBVe{background:rgba(66,133,244,.04)}.nsm7Bb-HzV7m-LgbsSe:active .nsm7Bb-HzV7m-LgbsSe-MJoBVe{background:rgba(66,133,244,.1)}.nsm7Bb-HzV7m-LgbsSe.MFS4be-Ia7Qfc:hover .nsm7Bb-HzV7m-LgbsSe-MJoBVe,.nsm7Bb-HzV7m-LgbsSe.MFS4be-Ia7Qfc:focus .nsm7Bb-HzV7m-LgbsSe-MJoBVe{background:rgba(255,255,255,.24)}.nsm7Bb-HzV7m-LgbsSe.MFS4be-Ia7Qfc:active .nsm7Bb-HzV7m-LgbsSe-MJoBVe{background:rgba(255,255,255,.32)}.nsm7Bb-HzV7m-LgbsSe .n1UuX-DkfjY{-webkit-border-radius:50%;border-radius:50%;display:-webkit-box;display:-webkit-flex;display:flex;height:20px;margin-left:-4px;margin-right:8px;min-width:20px;width:20px}.nsm7Bb-HzV7m-LgbsSe.jVeSEe .nsm7Bb-HzV7m-LgbsSe-BPrWId{font-family:"Roboto";font-size:12px;text-align:left}.nsm7Bb-HzV7m-LgbsSe.jVeSEe .nsm7Bb-HzV7m-LgbsSe-BPrWId .ssJRIf,.nsm7Bb-HzV7m-LgbsSe.jVeSEe .nsm7Bb-HzV7m-LgbsSe-BPrWId .K4efff .fmcmS{overflow:hidden;text-overflow:ellipsis}.nsm7Bb-HzV7m-LgbsSe.jVeSEe .nsm7Bb-HzV7m-LgbsSe-BPrWId .K4efff{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-align-items:center;align-items:center;color:#5f6368;fill:#5f6368;font-size:11px;font-weight:400}.nsm7Bb-HzV7m-LgbsSe.jVeSEe.MFS4be-Ia7Qfc .nsm7Bb-HzV7m-LgbsSe-BPrWId .K4efff{color:#e8eaed;fill:#e8eaed}.nsm7Bb-HzV7m-LgbsSe.jVeSEe .nsm7Bb-HzV7m-LgbsSe-BPrWId .K4efff .Bz112c{height:18px;margin:-3px -3px -3px 2px;min-width:18px;width:18px}.nsm7Bb-HzV7m-LgbsSe.jVeSEe .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf{-webkit-border-top-left-radius:0;border-top-left-radius:0;-webkit-border-bottom-left-radius:0;border-bottom-left-radius:0;-webkit-border-top-right-radius:3px;border-top-right-radius:3px;-webkit-border-bottom-right-radius:3px;border-bottom-right-radius:3px;margin-left:12px;margin-right:-10px}.nsm7Bb-HzV7m-LgbsSe.jVeSEe.JGcpL-RbRzK .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf{-webkit-border-radius:18px;border-radius:18px}.L5Fo6c-sM5MNb{border:0;display:block;left:0;position:relative;top:0}.L5Fo6c-bF1uUb{-webkit-border-radius:4px;border-radius:4px;bottom:0;cursor:pointer;left:0;position:absolute;right:0;top:0}.L5Fo6c-bF1uUb:focus{border:none;outline:none}sentinel{} @keyframes go2264125279{from{transform:scale(0) rotate(45deg);opacity:0;}to{transform:scale(1) rotate(45deg);opacity:1;}}@keyframes go3020080000{from{transform:scale(0);opacity:0;}to{transform:scale(1);opacity:1;}}@keyframes go463499852{from{transform:scale(0) rotate(90deg);opacity:0;}to{transform:scale(1) rotate(90deg);opacity:1;}}@keyframes go1268368563{from{transform:rotate(0deg);}to{transform:rotate(360deg);}}@keyframes go1310225428{from{transform:scale(0) rotate(45deg);opacity:0;}to{transform:scale(1) rotate(45deg);opacity:1;}}@keyframes go651618207{0%{height:0;width:0;opacity:0;}40%{height:0;width:6px;opacity:1;}100%{opacity:1;height:10px;}}@keyframes go901347462{from{transform:scale(0.6);opacity:0.4;}to{transform:scale(1);opacity:1;}}.go4109123758{z-index:9999;}.go4109123758 > *{pointer-events:auto;}:root{--rt-color-white:#fff;--rt-color-dark:#222;--rt-color-success:#8dc572;--rt-color-error:#be6464;--rt-color-warning:#f0ad4e;--rt-color-info:#337ab7;--rt-opacity:0.9;--rt-transition-show-delay:0.15s;--rt-transition-closing-delay:0.15s}.core-styles-module_tooltip__3vRRp{position:absolute;top:0;left:0;pointer-events:none;opacity:0;will-change:opacity}.core-styles-module_fixed__pcSol{position:fixed}.core-styles-module_arrow__cvMwQ{position:absolute;background:inherit}.core-styles-module_noArrow__xock6{display:none}.core-styles-module_clickable__ZuTTB{pointer-events:auto}.core-styles-module_show__Nt9eE{opacity:var(--rt-opacity);transition:opacity var(--rt-transition-show-delay)ease-out}.core-styles-module_closing__sGnxF{opacity:0;transition:opacity var(--rt-transition-closing-delay)ease-in}\n.styles-module_tooltip__mnnfp{padding:8px 16px;border-radius:3px;font-size:90%;width:max-content}.styles-module_arrow__K0L3T{width:8px;height:8px}[class*=\'react-tooltip__place-top\']>.styles-module_arrow__K0L3T{transform:rotate(45deg)}[class*=\'react-tooltip__place-right\']>.styles-module_arrow__K0L3T{transform:rotate(135deg)}[class*=\'react-tooltip__place-bottom\']>.styles-module_arrow__K0L3T{transform:rotate(225deg)}[class*=\'react-tooltip__place-left\']>.styles-module_arrow__K0L3T{transform:rotate(315deg)}.styles-module_dark__xNqje{background:var(--rt-color-dark);color:var(--rt-color-white)}.styles-module_light__Z6W-X{background-color:var(--rt-color-white);color:var(--rt-color-dark)}.styles-module_success__A2AKt{background-color:var(--rt-color-success);color:var(--rt-color-white)}.styles-module_warning__SCK0X{background-color:var(--rt-color-warning);color:var(--rt-color-white)}.styles-module_error__JvumD{background-color:var(--rt-color-error);color:var(--rt-color-white)}.styles-module_info__BWdHW{background-color:var(--rt-color-info);color:var(--rt-color-white)}\n__wm.rw(0);\n\nThe Wayback Machine - https://web.archive.org/web/20240510213845/https://takeuforward.org/\n//\n\n CloseWelcome back totakeUforwardSign in with GoogleSign in with GoogleOr login with your emailForgot Password?LoginDon’t you have an account? Create account', 'Open in New TabCloseCloseReport a BugPlease provide details of the bug you encountered.NameEmailPhone NumberBug DescriptionSubmit', 'Profile', 'BlogsDSA Sheets', "Striver's A2Z Sheet", "Striver's SDE Sheet", "Striver's 79 Sheet", 'Blind 75 Sheet', "System DesignStriver's DSA Playlist", 'Arrays Series', 'DP Series', 'Graph Series', 'LinkedList SeriesSDE Core Sheets', 'DBMS', 'Operating System', 'Computer Networks', "Striver's CP SheetSaved NotesReport BugExpand / collapse sidebarOpen sidebar", "Get 1:1 MentorshipLoginStrivers A2Z DSA Course/SheetFAQFAQ'sCloseAre these many questions enough for clearing any DSA round?They\n cover all concepts, so conceptwise you will be covered in depth as you \nwould have solved 450+ problems. After that, it depends on your skill \nset, if you can tackle a new problem on the same concept, ideally you \nshould be able to.Is this a language specific course?Striver\n has made sure that the lectures are not language based, he teaches you \nthe alogrithms. Post that he writes the pseudocodes, which are language \nindependent. Loops and data structures are similar in every language, so\n you can always have the articles open on a parallel tab to check the \ncode for C++, Java, Python or Javascript.How do I get my doubts resolved?If\n you have any doubts, you can always open the youtube comments, and read\n through. Mostly all the common doubts are there in the YouTube section.\n If you still have doubts, we will highly encourage you to use \ntechnology, and open Gemini/ChatGPT, and paste the code from our \narticle, and ask them the doubt. This works for most of the use cases. \nIf you still have doubt, you can post on the youtube comments, Striver \nusually replies if the community has not.What is the difference between Strivers SDE Sheet vs Strivers A2Z DSA Course?The\n Strivers SDE sheet is for people who have interviews in near future, \nand they are already versed with DSA basics. The Strivers A2Z DSA Course\n is for people who are starting of, or they want to practice more \nproblems on concepts.Do I need to pay anything?As\n of today, every thing on takeUforward is free, however we will be happy\n if you give us a shoutout if the content helps you. That will mean a \nworld to us.This\n course is made for people who want to learn DSA from A to Z for free in\n a well-organized and structured manner. The lecture quality is better \nthan what you get in paid courses, the only thing we don’t provide is \ndoubt support, but trust me our YouTube video comments resolve that as \nwell, we have a wonderful community of 250K+ people who engage in all of\n the videos.Key HighlightsTeaches you problem solving by diving deep into DSA, with 450+ modules.In-depth video solutions covering brute, better, optimal solutions.Well structured articles/notes for quick revision.C++, Java, Python, and Javascript code.Company tags associated with each problem.Notes section to save your notes for quick revision.Used by over 1.5M+ people worldwide in the last 1 year.All the lectures are recorded in 4K.None of the paid/unpaid courses have these many modules.NoteThe Series doesn’t focus on any specific programming language. Instead, it emphasizes logic and uses pseudocode.The\n first two basic videos might use C++, but for Java tutorials, you can \nwatch other YouTube videos. When tackling core problems of data \nstructures and algorithms (DSA), the Series uses pseudocode that isn’t \ntied to any particular programming language.However, you can find code examples in your preferred language in the notes and articles provided.Your Progress: 0/4550%  completeShow RevisionStep 1 : Learn the basics0 /31Lec 1: Things to Know in C++/Java/Python or any language0 /9StatusProblemArticleYoutubePracticeNoteDifficultyRevision", 'User Input / Output'], ['https://practice.geeksforgeeks.org/problems/search-query-auto-complete/0?category%5B%5D=Strings&amp;category%5B%5D=Strings&amp;problemStatus=unsolved&amp;difficulty%5B%5D=2&amp;page=1&amp;query=category%5B%5DStringsproblemStatusunsolveddifficulty%5B%5D2page1category%5B%5DStr'])
(['Data Types'], ['https://bit.ly/3Dqmgvx'])
(['If Else statements'], ['https://practice.geeksforgeeks.org/problems/java-if-else-decision-making0924/0?category%5B%5D=Java&amp;category%5B%5D=Java&amp;difficulty%5B%5D=-2&amp;page=1&amp;query=category%5B%5DJavadifficulty%5B%5D-2page1category%5B%5DJava'])
(['Switch Statement'], ['https://practice.geeksforgeeks.org/problems/java-switch-case-statement3529/1'])
([], [None])
(['For loops'], ['https://www.codingninjas.com/studio/problems/nth-fibonacci-number_74156?utm_source=striver&amp;utm_medium=website&amp;utm_campaign=a_zcoursetuf'])
(['While loops'], ['https://practice.geeksforgeeks.org/problems/while-loop-printtable-java/1'])
(['Functions (Pass by Reference and Value)'], ['https://bit.ly/3DqE0ac'])
(['Time Complexity [Learn Basics, and then analyse in next Steps]'], ['https://takeuforward.org/time-complexity/time-and-space-complexity-strivers-a2z-dsa-course/'])
(['Patterns'], ['https://takeuforward.org/strivers-a2z-dsa-course/must-do-pattern-problems-before-starting-dsa/'])
(['C++ STL'], ['https://www.youtube.com/watch?v=RRVYpIET_RU'])
([], [None])
(['Count Digits'], ['https://practice.geeksforgeeks.org/problems/count-digits5716/1'])
(['Reverse a Number'], ['https://leetcode.com/problems/reverse-integer/'])
(['Check Palindrome'], ['https://leetcode.com/problems/palindrome-number/'])
(['GCD Or HCF'], ['https://practice.geeksforgeeks.org/problems/lcm-and-gcd4516/1'])
(['Armstrong Numbers'], ['https://leetcode.com/problems/armstrong-number/'])
(['Print all Divisors'], ['https://practice.geeksforgeeks.org/problems/sum-of-all-divisors-from-1-to-n4738/1'])
(['Check for Prime'], ['https://practice.geeksforgeeks.org/problems/minimum-number-of-jumps-1587115620/1'])
(['Understand recursion by print something N times'], ['https://bit.ly/3K2epHv'])
(['Print name N times using recursion'], ['https://bit.ly/3y2BiWz'])
(['Print 1 to N using recursion'], ['https://practice.geeksforgeeks.org/problems/print-1-to-n-without-using-loops-1587115620/1'])
(['Print N to 1 using recursion'], ['https://bit.ly/3LOkcBn'])
(['Sum of first N numbers'], ['https://practice.geeksforgeeks.org/problems/sum-of-first-n-terms5843/1'])
(['Factorial of N numbers'], ['https://practice.geeksforgeeks.org/problems/find-all-factorial-numbers-less-than-or-equal-to-n3548/0?problemType=functional&amp;difficulty%5B%5D=-1&amp;page=1&amp;query=problemTypefunctionaldifficulty%5B%5D-1page1'])
(['Reverse an array'], ['https://practice.geeksforgeeks.org/problems/reverse-an-array/0'])
(['Check if a string is palindrome or not'], ['https://leetcode.com/problems/valid-palindrome/'])
(['Fibonacci Number'], ['https://leetcode.com/problems/fibonacci-number/'])
(['Hashing Theory'], ['https://takeuforward.org/hashing/hashing-maps-time-complexity-collisions-division-rule-of-hashing-strivers-a2z-dsa-course/'])
(['Counting frequencies of array elements', 'soon...'], ['https://practice.geeksforgeeks.org/problems/frequency-of-array-elements-1587115620/0'])
(['Find the highest/lowest frequency element', 'soon...'], ['https://leetcode.com/problems/frequency-of-the-most-frequent-element/'])
(['Selection Sort'], ['https://bit.ly/3ppA6YJ'])
(['Bubble Sort'], ['https://bit.ly/3w6yQx8'])
(['Insertion Sort'], ['https://bit.ly/3JVcqot'])
(['Merge Sort'], ['https://bit.ly/3A30Anw'])
(['Recursive Bubble Sort', 'soon...'], ['https://bit.ly/3QV65vI'])
(['Recursive Insertion Sort', 'soon...'], ['https://bit.ly/3PxAWx1'])
(['Quick Sort'], ['https://bit.ly/3dsEbIK'])
(['Largest Element in an Array'], ['https://bit.ly/3Pld280'])
(['Second Largest Element in an Array without sorting'], ['https://bit.ly/3pFvBcN'])
(['Check if the array is sorted'], ['https://leetcode.com/problems/check-if-array-is-sorted-and-rotated/#:~:text=Input%3A%20nums%20%3D%20%5B2%2C,no%20rotation)%20to%20make%20nums.'])
(['Remove duplicates from Sorted array'], ['https://leetcode.com/problems/remove-duplicates-from-sorted-array/#:~:text=Input%3A%20nums%20%3D%20%5B0%2C,%2C%203%2C%20and%204%20respectively.'])
(['Left Rotate an array by one place'], ['https://leetcode.com/problems/rotate-array/'])
(['Left rotate an array by D places'], ['https://leetcode.com/problems/rotate-array/'])
(['Move Zeros to end'], ['https://leetcode.com/problems/move-zeroes/'])
(['Linear Search'], ['https://bit.ly/3KcpHcB'])
(['Find the Union'], ['https://bit.ly/3Ap7Onp'])
(['Find missing number in an array'], ['https://leetcode.com/problems/missing-number/'])
(['Maximum Consecutive Ones'], ['https://leetcode.com/problems/max-consecutive-ones/'])
(['Find the number that appears once, and other numbers twice.'], ['https://leetcode.com/problems/single-number/'])
(['Longest subarray with given sum K(positives)'], ['https://practice.geeksforgeeks.org/problems/longest-sub-array-with-sum-k0809/1?utm_source=youtube&amp;utm_medium=collab_striver_ytdescription&amp;utm_campaign=longest-sub-array-with-sum-k'])
(['Longest subarray with sum K (Positives + Negatives)'], ['https://practice.geeksforgeeks.org/problems/longest-sub-array-with-sum-k0809/1?utm_source=youtube&amp;utm_medium=collab_striver_ytdescription&amp;utm_campaign=longest-sub-array-with-sum-k'])
(['2Sum Problem'], ['https://leetcode.com/problems/two-sum/'])
(["Sort an array of 0's 1's and 2's"], ['https://leetcode.com/problems/sort-colors/'])
(['Majority Element (&gt;n/2 times)'], ['https://leetcode.com/problems/majority-element/'])
(["Kadane's Algorithm, maximum subarray sum"], ['https://leetcode.com/problems/maximum-subarray/'])
(['Print subarray with maximum subarray sum (extended version of above problem)'], ['https://bit.ly/3SLFFhs'])
(['Stock Buy and Sell'], ['https://leetcode.com/problems/best-time-to-buy-and-sell-stock/'])
(['Rearrange the array in alternating positive and negative items'], ['https://leetcode.com/problems/rearrange-array-elements-by-sign/'])
(['Next Permutation'], ['https://leetcode.com/problems/next-permutation/'])
(['Leaders in an Array problem'], ['https://bit.ly/3bZqbGc'])
(['Longest Consecutive Sequence in an Array'], ['https://leetcode.com/problems/longest-consecutive-sequence/solution/'])
(['Set Matrix Zeros'], ['https://leetcode.com/problems/set-matrix-zeroes/'])
(['Rotate Matrix by 90 degrees'], ['https://leetcode.com/problems/rotate-image/'])
(['Print the matrix in spiral manner'], ['https://leetcode.com/problems/spiral-matrix/'])
(['Count subarrays with given sum'], ['https://leetcode.com/problems/subarray-sum-equals-k/'])
(["Pascal's Triangle"], ['https://leetcode.com/problems/pascals-triangle/'])
(['Majority Element (n/3 times)'], ['https://leetcode.com/problems/majority-element-ii/'])
(['3-Sum Problem'], ['https://leetcode.com/problems/3sum/'])
(['4-Sum Problem'], ['https://leetcode.com/problems/4sum/'])
(['Largest Subarray with 0 Sum'], ['https://bit.ly/3w5QSzC'])
(['Count number of subarrays with given xor K'], ['https://www.interviewbit.com/problems/subarray-with-given-xor/'])
(['Merge Overlapping Subintervals'], ['https://leetcode.com/problems/merge-intervals/'])
(['Merge two sorted arrays without extra space'], ['https://leetcode.com/problems/merge-sorted-array/'])
(['Find the repeating and missing number'], ['https://bit.ly/3zWZoCs'])
(['Count Inversions'], ['https://bit.ly/3PtLWLM'])
(['Reverse Pairs'], ['https://leetcode.com/problems/reverse-pairs/'])
(['Maximum Product Subarray'], ['https://leetcode.com/problems/maximum-product-subarray/'])
(['Binary Search to find X in sorted array'], ['https://leetcode.com/problems/binary-search/'])
(['Implement Lower Bound'], ['https://bit.ly/3Cf398N'])
(['Implement Upper Bound'], ['https://bit.ly/3CgDDjE'])
(['Search Insert Position'], ['https://leetcode.com/problems/search-insert-position/#:~:text=Search%20Insert%20Position%20%2D%20LeetCode&amp;text=Given%20a%20sorted%20array%20of,(log%20n)%20runtime%20complexity.'])
(['Floor/Ceil in Sorted Array'], ['https://www.codingninjas.com/codestudio/problems/ceiling-in-a-sorted-array_1825401'])
(['Find the first or last occurrence of a given number in a sorted array'], ['https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/'])
(['Count occurrences of a number in a sorted array with duplicates'], ['https://bit.ly/3SVcOqW'])
(['Search in Rotated Sorted Array I'], ['https://leetcode.com/problems/search-in-rotated-sorted-array/'])
(['Search in Rotated Sorted Array II'], ['https://leetcode.com/problems/search-in-rotated-sorted-array-ii/'])
(['Find minimum in Rotated Sorted Array'], ['https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/'])
(['Find out how many times has an array been rotated'], ['https://bit.ly/3dEvWJD'])
(['Single element in a Sorted Array'], ['https://leetcode.com/problems/single-element-in-a-sorted-array/'])
(['Find peak element'], ['https://leetcode.com/problems/find-peak-element/#:~:text=Find%20Peak%20Element%20%2D%20LeetCode&amp;text=A%20peak%20element%20is%20an,to%20any%20of%20the%20peaks.'])
(['Find square root of a number in log n'], ['https://bit.ly/3JXtGcE'])
(['Find the Nth root of a number using binary search'], ['https://bit.ly/3zWNyrL'])
(['Koko Eating Bananas'], ['https://leetcode.com/problems/koko-eating-bananas/'])
(['Minimum days to make M bouquets'], ['https://leetcode.com/problems/minimum-number-of-days-to-make-m-bouquets/'])
(['Find the smallest Divisor'], ['https://leetcode.com/problems/find-the-smallest-divisor-given-a-threshold/'])
(['Capacity to Ship Packages within D Days'], ['https://leetcode.com/problems/capacity-to-ship-packages-within-d-days/'])
(['Kth Missing Positive Number'], ['https://leetcode.com/problems/kth-missing-positive-number/#:~:text=Given%20an%20array%20arr%20of,13%2C...%5D.'])
(['Aggressive Cows'], ['https://www.spoj.com/problems/AGGRCOW/'])
(['Book Allocation Problem'], ['https://bit.ly/3MZQOct'])
(['Split array - Largest Sum'], ['https://leetcode.com/problems/split-array-largest-sum/'])
(["Painter's partition"], ['https://www.codingninjas.com/studio/problems/painter-s-partition-problem_1089557?utm_source=striver&amp;utm_medium=website&amp;utm_campaign=a_zcoursetuf'])
(['Minimize Max Distance to Gas Station'], ['https://leetcode.com/problems/minimize-max-distance-to-gas-station/'])
(['Median of 2 sorted arrays'], ['https://leetcode.com/problems/median-of-two-sorted-arrays/'])
(['Kth element of 2 sorted arrays'], ['https://bit.ly/3Amcomr'])
(["Find the row with maximum number of 1's"], ['https://bit.ly/3QNDw2W'])
(['Search in a 2 D matrix'], ['https://leetcode.com/problems/search-a-2d-matrix/'])
(['Search in a row and column wise sorted matrix'], ['https://leetcode.com/problems/search-a-2d-matrix-ii/'])
(['Find Peak Element (2D Matrix)'], ['https://leetcode.com/problems/find-a-peak-element-ii/'])
(['Matrix Median'], ['https://bit.ly/3PvwuPk'])
(['Remove outermost Paranthesissoon...'], ['https://leetcode.com/problems/remove-outermost-parentheses/'])
(['Reverse words in a given string / Palindrome Check', 'soon...'], ['https://leetcode.com/problems/reverse-words-in-a-string/'])
(['Largest odd number in a stringsoon...'], ['https://leetcode.com/problems/largest-odd-number-in-string/'])
(['Longest Common Prefixsoon...'], ['https://leetcode.com/problems/longest-common-prefix/'])
(['Isomorphic Stringsoon...'], ['https://leetcode.com/problems/isomorphic-strings/'])
(['check whether one string is a rotation of anothersoon...'], ['https://leetcode.com/problems/rotate-string/'])
(['Check if two strings are anagram of each other', 'soon...'], ['https://leetcode.com/problems/valid-anagram/#:~:text=Given%20two%20strings%20s%20and,the%20original%20letters%20exactly%20once.&amp;text=Constraints%3A,.length%20%3C%3D%205%20*%2010'])
(['Sort Characters by frequencysoon...'], ['https://leetcode.com/problems/sort-characters-by-frequency/'])
(['Maximum Nesting Depth of Paranthesissoon...'], ['https://leetcode.com/problems/maximum-nesting-depth-of-the-parentheses/'])
(['Roman Number to Integer and vice versasoon...'], ['https://leetcode.com/problems/roman-to-integer/'])
(['Implement Atoisoon...'], ['https://leetcode.com/problems/string-to-integer-atoi/'])
(['Count Number of Substringssoon...'], ['https://bit.ly/3CfQfYi'])
(['Longest Palindromic Substring[Do it without DP]soon...'], ['https://leetcode.com/problems/longest-palindromic-substring/'])
(['Sum of Beauty of all substringsoon...'], ['https://leetcode.com/problems/sum-of-beauty-of-all-substrings/'])
(['Reverse Every Word in A Stringsoon...'], ['https://leetcode.com/problems/reverse-words-in-a-string/'])
(['Introduction to LinkedList, learn about struct, and how is node represented'], ['https://bit.ly/3URZnst'])
(['Inserting a node in LinkedList'], ['https://bit.ly/3w9pEIt'])
(['Deleting a node in LinkedList'], ['https://leetcode.com/problems/delete-node-in-a-linked-list/'])
(['Find the length of the linkedlist [learn traversal]'], ['https://bit.ly/3Po7tpf'])
(['Search an element in the LL'], ['https://bit.ly/3Epriup'])
(['Introduction to DLL, learn about struct, and how is node represented'], ['https://bit.ly/3V9wY1v'])
(['Insert a node in DLL'], ['https://bit.ly/3QD4hHs'])
(['Delete a node in DLL'], ['https://bit.ly/3QlEoMx'])
(['Reverse a DLL'], ['https://bit.ly/3w6hUaa'])
(['Middle of a LinkedList [TortoiseHare Method]'], ['https://leetcode.com/problems/middle-of-the-linked-list/'])
(['Reverse a LinkedList [Iterative]'], ['https://leetcode.com/problems/reverse-linked-list/'])
(['Reverse a LL [Recursive]'], ['https://leetcode.com/problems/reverse-linked-list/'])
(['Detect a loop in LL'], ['https://leetcode.com/problems/linked-list-cycle/'])
(['Find the starting point in LL'], ['https://leetcode.com/problems/linked-list-cycle-ii/'])
(['Length of Loop in LL'], ['https://bit.ly/3dyXL6m'])
(['Check if LL is palindrome or not'], ['https://leetcode.com/problems/palindrome-linked-list/'])
(['Segrregate odd and even nodes in LL'], ['https://leetcode.com/problems/odd-even-linked-list/'])
(['Remove Nth node from the back of the LL'], ['https://leetcode.com/problems/remove-nth-node-from-end-of-list/'])
(['Delete the middle node of LL'], ['https://leetcode.com/problems/delete-the-middle-node-of-a-linked-list/#:~:text=You%20are%20given%20the%20head,than%20or%20equal%20to%20x%20.'])
(['Sort LL'], ['https://leetcode.com/problems/sort-list/'])
(["Sort a LL of 0's 1's and 2's by changing links"], ['https://bit.ly/3Ceotvr'])
(['Find the intersection point of Y LL'], ['https://leetcode.com/problems/intersection-of-two-linked-lists/'])
(['Add 1 to a number represented by LL'], ['https://bit.ly/3piCTD3'])
(['Add 2 numbers in LL'], ['https://leetcode.com/problems/add-two-numbers/'])
(['Delete all occurrences of a key in DLL'], ['https://bit.ly/3zuBr66'])
(['Find pairs with given sum in DLL'], ['https://bit.ly/3zWPiBj'])
(['Remove duplicates from sorted DLL'], ['https://bit.ly/3FtJUtZ'])
(['Reverse LL in group of given size K'], ['https://leetcode.com/problems/reverse-nodes-in-k-group/'])
(['Rotate a LL'], ['https://leetcode.com/problems/rotate-list/description/'])
(['Flattening of LL'], ['https://bit.ly/3w9TKf8'])
(['Clone a Linked List with random and next pointer'], ['https://leetcode.com/problems/copy-list-with-random-pointer/'])
(['Recursive Implementation of atoi()soon...'], ['https://leetcode.com/problems/string-to-integer-atoi/'])
(['Pow(x, n)'], ['https://leetcode.com/problems/powx-n/'])
(['Count Good numberssoon...'], ['https://leetcode.com/problems/count-good-numbers/'])
(['Sort a stack using recursionsoon...'], ['https://bit.ly/3Pu0YBn'])
(['Reverse a stack using recursionsoon...'], ['https://bit.ly/3podAiY'])
(['Generate all binary stringssoon...'], ['https://bit.ly/3QJ0vwc'])
(['Generate Paranthesissoon...'], ['https://leetcode.com/problems/generate-parentheses/'])
(['Print all subsequences/Power Set'], ['https://leetcode.com/problems/subsets/'])
(['Learn All Patterns of Subsequences (Theory)'], ['https://bit.ly/3US225G'])
(['Count all subsequences with sum Ksoon...'], ['https://bit.ly/3SVf1me'])
(['Check if there exists a subsequence with sum Ksoon...'], ['https://www.codingninjas.com/studio/problems/subset-sum_630213?utm_source=striver&amp;utm_medium=website&amp;utm_campaign=a_zcoursetuf'])
(['Combination Sum'], ['https://leetcode.com/problems/combination-sum/'])
(['Combination Sum-II'], ['https://leetcode.com/problems/combination-sum-ii/'])
(['Subset Sum-I'], ['https://bit.ly/3C9GQRS'])
(['Subset Sum-II'], ['https://leetcode.com/problems/subsets-ii/'])
(['Combination Sum - IIIsoon...'], ['https://leetcode.com/problems/combination-sum-iii/'])
(['Letter Combinations of a Phone numbersoon...'], ['https://leetcode.com/problems/letter-combinations-of-a-phone-number/'])
(['Palindrome Partitioning'], ['https://leetcode.com/problems/palindrome-partitioning/'])
(['Word Search', 'soon...'], ['https://leetcode.com/problems/word-search/'])
(['N Queen'], ['https://leetcode.com/problems/n-queens/'])
(['Rat in a Maze'], ['https://practice.geeksforgeeks.org/problems/rat-in-a-maze-problem/1'])
(['Word Breaksoon...'], ['https://leetcode.com/problems/word-break/'])
(['M Coloring Problem'], ['https://practice.geeksforgeeks.org/problems/m-coloring-problem-1587115620/1#'])
(['Sudoko Solver'], ['https://leetcode.com/problems/sudoku-solver/'])
(['Expression Add Operatorssoon...'], ['https://leetcode.com/problems/expression-add-operators/'])
(['Introduction to Bit Manipulation [Theory]'], ['https://bit.ly/3Eo8JVW'])
(['Check if the i-th bit is set or not'], ['https://practice.geeksforgeeks.org/problems/check-whether-k-th-bit-is-set-or-not-1587115620/1'])
(['Check if a number is odd or not'], ['https://practice.geeksforgeeks.org/problems/odd-or-even3618/1'])
(['Check if a number is power of 2 or not'], ['https://leetcode.com/problems/power-of-two/'])
(['Count the number of set bits'], ['https://practice.geeksforgeeks.org/problems/count-total-set-bits-1587115620/1'])
(['Set/Unset the rightmost unset bit'], ['https://practice.geeksforgeeks.org/problems/set-the-rightmost-unset-bit4436/1'])
(['Swap two numbers'], ['https://practice.geeksforgeeks.org/problems/swap-two-numbers3844/1'])
(['Divide two integers without using multiplication, division and mod operator'], ['https://leetcode.com/problems/divide-two-integers/'])
(['Count number of bits to be flipped to convert A to B'], ['https://leetcode.com/problems/minimum-bit-flips-to-convert-number/'])
(['Find the number that appears odd number of times'], ['https://leetcode.com/problems/single-number/'])
(['Power Set'], ['https://leetcode.com/problems/subsets/'])
(['Find xor of numbers from L to R'], ['https://bit.ly/3T8xUCf'])
(['Find the two numbers appearing odd number of times'], ['https://practice.geeksforgeeks.org/problems/two-numbers-with-odd-occurrences5846/1'])
(['Print Prime Factors of a Number'], ['https://bit.ly/3C165p8'])
(['All Divisors of a Number'], ['https://practice.geeksforgeeks.org/problems/all-divisors-of-a-number/1?utm_source=youtube&amp;amp;utm_medium=collab_striver_ytdescription&amp;amp;utm_campaign=all-divisors-of-a-number'])
(['Sieve of Eratosthenes'], ['https://leetcode.com/problems/count-primes/'])
(['Find Prime Factorisation of a Number using Sieve'], ['https://bit.ly/3SPGzbK'])
(['Power(n, x)'], ['https://leetcode.com/problems/powx-n/'])
(['Implement Stack using Arrays'], ['https://bit.ly/3QPJ39w'])
(['Implement Queue using Arrays'], ['https://bit.ly/3C9HLli'])
(['Implement Stack using Queue'], ['https://leetcode.com/problems/implement-stack-using-queues/'])
(['Implement Queue using Stack'], ['https://leetcode.com/problems/implement-queue-using-stacks/'])
(['Implement stack using Linkedlist', 'soon...'], ['https://bit.ly/3w6PwVv'])
(['Implement queue using Linkedlist', 'soon...'], ['https://bit.ly/3PA7mY0'])
(['Check for balanced paranthesis'], ['https://leetcode.com/problems/valid-parentheses/'])
(['Implement Min Stack'], ['https://leetcode.com/problems/min-stack/'])
(['Infix to Postfix Conversion using Stack', 'soon...'], ['https://bit.ly/3JWYj1P'])
(['Prefix to Infix Conversionsoon...'], ['https://bit.ly/3FwxK3j'])
(['Prefix to Postfix Conversionsoon...'], ['https://bit.ly/3DrwCLI'])
(['Postfix to Prefix Conversionsoon...'], ['https://bit.ly/3UaWJxk'])
(['Postfix to Infixsoon...'], ['https://bit.ly/3sNZ1a2'])
(['Convert Infix To Prefix Notation', 'soon...'], ['https://bit.ly/3T0gZ4P'])
(['Next Greater Element'], ['https://leetcode.com/problems/next-greater-element-i/'])
(['Next Greater Element 2soon...'], ['https://leetcode.com/problems/next-greater-element-ii/'])
(['Next Smaller Elementsoon...'], ['https://www.interviewbit.com/problems/nearest-smaller-element/'])
(['Number of NGEs to the rightsoon...'], ['https://bit.ly/3Np2R2H'])
(['Trapping Rainwater'], ['https://leetcode.com/problems/trapping-rain-water/'])
(['Sum of subarray minimumsoon...'], ['https://leetcode.com/problems/sum-of-subarray-minimums/'])
(['Asteroid Collisionsoon...'], ['https://leetcode.com/problems/asteroid-collision/'])
(['Sum of subarray rangessoon...'], ['https://leetcode.com/problems/sum-of-subarray-ranges/'])
(['Remove k Digitssoon...'], ['https://leetcode.com/problems/remove-k-digits/'])
(['Largest rectangle in a histogram'], ['https://leetcode.com/problems/largest-rectangle-in-histogram/'])
(['Maximal Rectanglessoon...'], ['https://leetcode.com/problems/maximal-rectangle/'])
(['Sliding Window maximum'], ['https://leetcode.com/problems/sliding-window-maximum/'])
(['Stock span problemsoon...'], ['https://leetcode.com/problems/online-stock-span/'])
(['The Celebrity Problemsoon...'], ['https://leetcode.com/accounts/login/?next=/problems/find-the-celebrity/'])
(['LRU cache (IMPORTANT)'], ['https://leetcode.com/problems/lru-cache/'])
(['LFU cache'], ['https://leetcode.com/problems/lfu-cache/'])
(['Longest Substring Without Repeating Characters'], ['https://leetcode.com/problems/longest-substring-without-repeating-characters/'])
(['Max Consecutive Ones III'], ['https://leetcode.com/problems/max-consecutive-ones-iii/'])
(['Fruit Into Baskets'], ['https://bit.ly/3D6d94w'])
(['longest repeating character replacement'], ['https://leetcode.com/problems/longest-repeating-character-replacement/'])
(['Binary subarray with sum'], ['https://leetcode.com/problems/binary-subarrays-with-sum/'])
(['Count number of nice subarrays'], ['https://leetcode.com/problems/count-number-of-nice-subarrays/'])
(['Number of substring containing all three characters'], ['https://leetcode.com/problems/number-of-substrings-containing-all-three-characters/'])
(['Maximum point you can obtain from cards'], ['https://leetcode.com/problems/maximum-points-you-can-obtain-from-cards/'])
(['Longest Substring with At Most K Distinct Characters'], ['https://leetcode.com/problems/longest-substring-with-at-most-k-distinct-characters/'])
(['Subarray with k different integers'], ['https://leetcode.com/problems/subarrays-with-k-different-integers/'])
(['Minimum Window Substring'], ['https://leetcode.com/problems/minimum-window-substring/'])
(['Minimum Window Subsequencesoon...'], ['https://leetcode.com/problems/minimum-window-subsequence/'])
(['Introduction to Priority Queues using Binary Heapssoon...'], ['https://bit.ly/3TSxAHd'])
(['Min Heap and Max Heap Implementationsoon...'], ['https://bit.ly/3weGgP3'])
(['Check if an array represents a min-heap or notsoon...'], ['https://bit.ly/3AbFrrI'])
(['Convert min Heap to max Heapsoon...'], ['https://bit.ly/3flmw7c'])
(['Kth largest element in an array [use priority queue]', 'soon...'], ['https://leetcode.com/problems/kth-largest-element-in-an-array/'])
(['Kth smallest element in an array [use priority queue]', 'soon...'], ['https://bit.ly/3PvAOhK'])
(['Sort K sorted arraysoon...'], ['https://bit.ly/3QLpaAs'])
(['Merge M sorted Listssoon...'], ['https://leetcode.com/problems/merge-k-sorted-lists/'])
(['Replace each array element by its corresponding rank', 'soon...'], ['https://bit.ly/3TS3jcg'])
(['Task Schedulersoon...'], ['https://leetcode.com/problems/task-scheduler/'])
(['Hands of Straightssoon...'], ['https://leetcode.com/problems/hand-of-straights/'])
(['Design twittersoon...'], ['https://leetcode.com/problems/design-twitter/'])
(['Connect `n` ropes with minimal costsoon...'], ['https://bit.ly/3QVb1jR'])
(['Kth largest element in a stream of running integerssoon...'], ['https://leetcode.com/problems/kth-largest-element-in-a-stream/#:~:text=Implement%20KthLargest%20class%3A,largest%20element%20in%20the%20stream.'])
(['Maximum Sum Combinationsoon...'], ['https://www.interviewbit.com/problems/maximum-sum-combinations/'])
(['Find Median from Data Streamsoon...'], ['https://leetcode.com/problems/find-median-from-data-stream/'])
(['K most frequent elementssoon...'], ['https://leetcode.com/problems/top-k-frequent-elements/'])
(['Assign Cookiessoon...'], ['https://leetcode.com/problems/assign-cookies/'])
(['Fractional Knapsack Problem'], ['https://practice.geeksforgeeks.org/problems/fractional-knapsack-1587115620/1'])
(['Greedy algorithm to find minimum number of coins'], ['https://www.geeksforgeeks.org/find-minimum-number-of-coins-that-make-a-change/'])
(['Lemonade Changesoon...'], ['https://leetcode.com/problems/lemonade-change/'])
(['Valid Paranthesis Checkersoon...'], ['https://leetcode.com/problems/valid-parenthesis-string/'])
(['N meetings in one room'], ['https://practice.geeksforgeeks.org/problems/n-meetings-in-one-room-1587115620/1'])
(['Jump Gamesoon...'], ['https://leetcode.com/problems/jump-game/'])
(['Jump Game 2soon...'], ['https://leetcode.com/problems/jump-game-ii/'])
(['Minimum number of platforms required for a railway'], ['https://practice.geeksforgeeks.org/problems/minimum-platforms-1587115620/1#'])
(['Job sequencing Problem'], ['https://practice.geeksforgeeks.org/problems/job-sequencing-problem-1587115620/1#'])
(['Candysoon...'], ['https://leetcode.com/problems/candy/'])
(['Program for Shortest Job First (or SJF) CPU Schedulingsoon...'], ['https://bit.ly/3DYCIFb'])
(['Program for Least Recently Used (LRU) Page Replacement Algorithmsoon...'], ['https://bit.ly/3dtFqHG'])
(['Insert Interval', 'soon...'], ['https://leetcode.com/problems/insert-interval/'])
(['Merge Intervals'], ['https://leetcode.com/problems/merge-intervals/'])
(['Non-overlapping Intervalssoon...'], ['https://leetcode.com/problems/non-overlapping-intervals/'])
(['Introduction to Trees'], ['https://bit.ly/3EsRmTM'])
(['Binary Tree Representation in C++'], ['https://bit.ly/3gn5Soh'])
(['Binary Tree Representation in Java'], ['https://bit.ly/3gn5Soh'])
(['Binary Tree Traversals in Binary Tree'], ['https://www.codingninjas.com/codestudio/problems/tree-traversal_981269?utm_source=striver&amp;utm_medium=website&amp;utm_campaign=a_zcoursetuf'])
(['Preorder Traversal of Binary Tree'], ['https://leetcode.com/problems/binary-tree-preorder-traversal/'])
(['Inorder Traversal of Binary Tree'], ['https://leetcode.com/problems/binary-tree-inorder-traversal/'])
(['Post-order Traversal of Binary Tree'], ['https://leetcode.com/problems/binary-tree-postorder-traversal/'])
(['Level order Traversal / Level order traversal in spiral form'], ['https://leetcode.com/problems/binary-tree-level-order-traversal/'])
(['Iterative Preorder Traversal of Binary Tree'], ['https://leetcode.com/problems/binary-tree-preorder-traversal/'])
(['Iterative Inorder Traversal of Binary Tree'], ['https://leetcode.com/problems/binary-tree-inorder-traversal/'])
(['Post-order Traversal of Binary Tree using 2 stack'], ['https://leetcode.com/problems/binary-tree-postorder-traversal/'])
(['Post-order Traversal of Binary Tree using 1 stack'], ['https://leetcode.com/problems/binary-tree-postorder-traversal/'])
(['Preorder, Inorder, and Postorder Traversal in one Traversal'], ['https://bit.ly/3T3oW9M'])
(['Height of a Binary Tree'], ['https://leetcode.com/problems/maximum-depth-of-binary-tree/'])
(['Check if the Binary tree is height-balanced or not'], ['https://leetcode.com/problems/balanced-binary-tree/'])
(['Diameter of Binary Tree'], ['https://leetcode.com/problems/diameter-of-binary-tree/'])
(['Maximum path sum'], ['https://leetcode.com/problems/binary-tree-maximum-path-sum/'])
(['Check if two trees are identical or not'], ['https://leetcode.com/problems/same-tree/'])
(['Zig Zag Traversal of Binary Tree'], ['https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/'])
(['Boundary Traversal of Binary Tree'], ['https://leetcode.com/problems/boundary-of-binary-tree/'])
(['Vertical Order Traversal of Binary Tree'], ['https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree/'])
(['Top View of Binary Tree'], ['https://practice.geeksforgeeks.org/problems/top-view-of-binary-tree/1'])
(['Bottom View of Binary Tree'], ['https://practice.geeksforgeeks.org/problems/bottom-view-of-binary-tree/1'])
(['Right/Left View of Binary Tree'], ['https://leetcode.com/problems/binary-tree-right-side-view/'])
(['Symmetric Binary Tree'], ['https://leetcode.com/problems/symmetric-tree/'])
(['Root to Node Path in Binary Tree'], ['https://bit.ly/3QA600D'])
(['LCA in Binary Tree'], ['https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/'])
(['Maximum width of a Binary Tree'], ['https://leetcode.com/problems/maximum-width-of-binary-tree/'])
(['Check for Children Sum Property'], ['https://bit.ly/3dEr73g'])
(['Print all the Nodes at a distance of K in a Binary Tree'], ['https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree/'])
(['Minimum time taken to BURN the Binary Tree from a Node'], ['https://bit.ly/3wcg7k1'])
(['Count total Nodes in a COMPLETE Binary Tree'], ['https://leetcode.com/problems/count-complete-tree-nodes/'])
(['Requirements needed to construct a Unique Binary Tree | Theory'], ['https://bit.ly/3UVCR1U'])
(['Construct Binary Tree from inorder and preorder'], ['https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/'])
(['Construct the Binary Tree from Postorder and Inorder Traversal'], ['https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/'])
(['Serialize and deserialize Binary Tree'], ['https://leetcode.com/problems/serialize-and-deserialize-binary-tree/'])
(['Morris Preorder Traversal of a Binary Tree'], ['https://leetcode.com/problems/binary-tree-inorder-traversal/'])
(['Morris Inorder Traversal of a Binary Tree'], ['https://leetcode.com/problems/binary-tree-inorder-traversal/'])
(['Flatten Binary Tree to LinkedList'], ['https://leetcode.com/problems/flatten-binary-tree-to-linked-list/'])
(['Introduction to Binary Search Tree'], ['https://bit.ly/3gprRLk'])
(['Search in a Binary Search Tree'], ['https://leetcode.com/problems/search-in-a-binary-search-tree/'])
(['Find Min/Max in BSTsoon...'], ['https://practice.geeksforgeeks.org/problems/minimum-element-in-bst/1'])
(['Ceil in a Binary Search Tree'], ['https://practice.geeksforgeeks.org/problems/implementing-ceil-in-bst/1'])
(['Floor in a Binary Search Tree'], ['https://bit.ly/3TSbXXE'])
(['Insert a given Node in Binary Search Tree'], ['https://leetcode.com/problems/insert-into-a-binary-search-tree/'])
(['Delete a Node in Binary Search Tree'], ['https://leetcode.com/problems/delete-node-in-a-bst/'])
(['Find K-th smallest/largest element in BST'], ['https://leetcode.com/problems/kth-smallest-element-in-a-bst/'])
(['Check if a tree is a BST or BT'], ['https://leetcode.com/problems/validate-binary-search-tree/'])
(['LCA in Binary Search Tree'], ['https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/'])
(['Construct a BST from a preorder traversal'], ['https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal/'])
(['Inorder Successor/Predecessor in BST'], ['https://leetcode.com/problems/inorder-successor-in-bst/'])
(["Merge 2 BST's"], ['https://leetcode.com/problems/binary-search-tree-iterator/'])
(['Two Sum In BST | Check if there exists a pair with Sum K'], ['https://leetcode.com/problems/two-sum-iv-input-is-a-bst/'])
(['Recover BST | Correct BST with two nodes swapped'], ['https://leetcode.com/problems/recover-binary-search-tree/'])
(['Largest BST in Binary Tree'], ['https://practice.geeksforgeeks.org/problems/largest-bst/1'])
(['Graph and Types'], ['https://bit.ly/3gpY19t'])
(['Graph Representation | C++'], ['https://bit.ly/3dGuwyv'])
(['Graph Representation | Java'], ['https://bit.ly/3dGuwyv'])
(['Connected Components | Logic Explanation'], ['https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph/'])
(['BFS'], ['https://practice.geeksforgeeks.org/problems/bfs-traversal-of-graph/1'])
(['DFS'], ['https://practice.geeksforgeeks.org/problems/depth-first-traversal-for-a-graph/1'])
(['Number of provinces (leetcode)'], ['https://leetcode.com/problems/number-of-provinces/#:~:text=A%20province%20is%20a%20group,the%20total%20number%20of%20provinces.'])
(['Connected Components Problem in Matrixsoon...'], ['https://bit.ly/3AxzhDG'])
(['Rotten Oranges'], ['https://leetcode.com/problems/rotting-oranges/'])
(['Flood fill'], ['https://leetcode.com/problems/flood-fill/'])
(['Cycle Detection in unirected Graph (bfs)'], ['https://practice.geeksforgeeks.org/problems/detect-cycle-in-an-undirected-graph/1?utm_source=youtube&amp;utm_medium=collab_striver_ytdescription&amp;utm_campaign=detect-cycle-in-an-undirected-graph'])
(['Cycle Detection in undirected Graph (dfs)'], ['https://practice.geeksforgeeks.org/problems/detect-cycle-in-an-undirected-graph/1?utm_source=youtube&amp;utm_medium=collab_striver_ytdescription&amp;utm_campaign=detect-cycle-in-an-undirected-graph'])
(['0/1 Matrix (Bfs Problem)'], ['https://leetcode.com/problems/01-matrix/'])
(['Surrounded Regions (dfs)'], ['https://leetcode.com/problems/surrounded-regions/'])
(['Number of Enclaves [flood fill implementation - multisource]'], ['https://leetcode.com/problems/number-of-enclaves/'])
(['Word ladder - 1'], ['https://leetcode.com/problems/word-ladder/'])
(['Word ladder - 2'], ['https://leetcode.com/problems/word-ladder-ii/'])
(['Number of Distinct Islands [dfs multisource]'], ['https://leetcode.com/problems/number-of-distinct-islands-ii/'])
(['Bipartite Graph (DFS)'], ['https://leetcode.com/problems/is-graph-bipartite/'])
(['Cycle Detection in Directed Graph (DFS)'], ['https://leetcode.com/problems/course-schedule-ii/discuss/293048/detecting-cycle-in-directed-graph-problem'])
(['Topo Sort'], ['https://practice.geeksforgeeks.org/problems/topological-sort/1'])
(["Kahn's Algorithm"], ['https://bit.ly/3c690mm'])
(['Cycle Detection in Directed Graph (BFS)'], ['https://practice.geeksforgeeks.org/problems/detect-cycle-in-a-directed-graph/1'])
(['Course Schedule - I'], ['https://leetcode.com/problems/course-schedule/'])
(['Course Schedule - II'], ['https://leetcode.com/problems/course-schedule-ii/'])
(['Find eventual safe states'], ['https://leetcode.com/problems/find-eventual-safe-states/'])
(['Alien dictionary'], ['https://leetcode.com/problems/alien-dictionary/solution/'])
(['Shortest Path in UG with unit weights'], ['https://bit.ly/3UVQD4C'])
(['Shortest Path in DAG'], ['https://bit.ly/3Eo1mhq'])
(["Djisktra's Algorithm"], ['https://practice.geeksforgeeks.org/problems/implementing-dijkstra-set-1-adjacency-matrix/1'])
(["Why priority Queue is used in Djisktra's Algorithm"], ['https://bit.ly/3Et6alk'])
(['Shortest path in a binary maze'], ['https://leetcode.com/problems/shortest-path-in-binary-matrix/'])
(['Path with minimum effort'], ['https://leetcode.com/problems/path-with-minimum-effort/'])
(['Cheapest flights within k stops'], ['https://leetcode.com/problems/cheapest-flights-within-k-stops/'])
(['Network Delay timesoon...'], ['https://leetcode.com/problems/network-delay-time/'])
(['Number of ways to arrive at destination'], ['https://leetcode.com/problems/number-of-ways-to-arrive-at-destination/'])
(['Minimum steps to reach end from start by performing multiplication and mod operations with array elements'], ['https://bit.ly/3QAEsrY'])
(['Bellman Ford Algorithm'], ['https://practice.geeksforgeeks.org/problems/distance-from-the-source-bellman-ford-algorithm/1'])
(['Floyd Warshal Algorithm'], ['https://practice.geeksforgeeks.org/problems/implementing-floyd-warshall2042/1'])
(['Find the city with the smallest number of neighbors in a threshold distance'], ['https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance/'])
(['Minimum Spanning Tree'], ['https://practice.geeksforgeeks.org/problems/minimum-spanning-tree/1'])
(["Prim's Algorithm"], ['https://practice.geeksforgeeks.org/problems/minimum-spanning-tree/1'])
(['Disjoint Set [Union by Rank]'], ['https://bit.ly/3QSGvHz'])
(['Disjoint Set [Union by Size]'], ['https://bit.ly/3QSGvHz'])
(["Kruskal's Algorithm"], ['https://practice.geeksforgeeks.org/problems/minimum-spanning-tree/1'])
(['Number of operations to make network connected'], ['https://leetcode.com/problems/number-of-operations-to-make-network-connected/'])
(['Most stones removed with same rows or columns'], ['https://leetcode.com/problems/most-stones-removed-with-same-row-or-column/'])
(['Accounts merge'], ['https://leetcode.com/problems/accounts-merge/'])
(['Number of island II'], ['https://leetcode.com/problems/number-of-islands-ii/'])
(['Making a Large Island'], ['https://leetcode.com/problems/making-a-large-island/'])
(['Swim in rising watersoon...'], ['https://leetcode.com/problems/swim-in-rising-water/'])
(['Bridges in Graph'], ['https://leetcode.com/problems/critical-connections-in-a-network/discuss/382385/find-bridges-in-a-graph'])
(['Articulation Point'], ['https://bit.ly/3T2LPKu'])
(["Kosaraju's Algorithm"], ['https://bit.ly/3TbvByL'])
(['Dynamic Programming Introduction'], ['https://bit.ly/3UWkWrS'])
(['Climbing Stars'], ['https://leetcode.com/problems/climbing-stairs/'])
(['Frog Jump(DP-3)'], ['https://bit.ly/3Xn0Kkw'])
(['Frog Jump with k distances(DP-4)'], ['https://bit.ly/3GyNRya'])
(['Maximum sum of non-adjacent elements (DP 5)'], ['https://leetcode.com/problems/house-robber/'])
(['House Robber (DP 6)'], ['https://leetcode.com/problems/house-robber-ii/'])
(["Ninja's Training (DP 7)"], ['https://bit.ly/3glc9kp'])
(['Grid Unique Paths : DP on Grids (DP8)'], ['https://leetcode.com/problems/unique-paths/'])
(['Grid Unique Paths 2 (DP 9)'], ['https://leetcode.com/problems/unique-paths-ii/'])
(['Minimum path sum in Grid (DP 10)'], ['https://leetcode.com/problems/minimum-path-sum/'])
(['Minimum path sum in Triangular Grid (DP 11)'], ['https://leetcode.com/problems/triangle/'])
(['Minimum/Maximum Falling Path Sum (DP-12)'], ['https://leetcode.com/problems/minimum-falling-path-sum/'])
(['3-d DP : Ninja and his friends (DP-13)'], ['https://bit.ly/3U9k6XT'])
(['Subset sum equal to target (DP- 14)'], ['https://practice.geeksforgeeks.org/problems/subset-sum-problem-1611555638/1'])
(['Partition Equal Subset Sum (DP- 15)'], ['https://leetcode.com/problems/partition-equal-subset-sum/'])
(['Partition Set Into 2 Subsets With Min Absolute Sum Diff (DP- 16)'], ['https://leetcode.com/problems/partition-array-into-two-arrays-to-minimize-sum-difference/'])
(['Count Subsets with Sum K (DP - 17)'], ['https://bit.ly/3AwVr8I'])
(['Count Partitions with Given Difference (DP - 18)'], ['https://bit.ly/3gkAM0s'])
(['0/1 Knapsack (DP - 19)'], ['https://practice.geeksforgeeks.org/problems/0-1-knapsack-problem0945/1'])
(['Minimum Coins (DP - 20)'], ['https://leetcode.com/problems/coin-change/'])
(['Target Sum (DP - 21)'], ['https://leetcode.com/problems/target-sum/'])
(['Coin Change 2 (DP - 22)'], ['https://leetcode.com/problems/coin-change-2/'])
(['Unbounded Knapsack (DP - 23)'], ['https://bit.ly/3Cbc5fz'])
(['Rod Cutting Problem | (DP - 24)'], ['https://practice.geeksforgeeks.org/problems/rod-cutting0840/1'])
(['Longest Common Subsequence | (DP - 25)'], ['https://leetcode.com/problems/longest-common-subsequence/'])
(['Print Longest Common Subsequence | (DP - 26)'], ['https://bit.ly/3T1Va4U'])
(['Longest Common Substring | (DP - 27)'], ['https://practice.geeksforgeeks.org/problems/longest-common-substring1452/1'])
(['Longest Palindromic Subsequence | (DP-28)'], ['https://leetcode.com/problems/longest-palindromic-subsequence/'])
(['Minimum insertions to make string palindrome | DP-29'], ['https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome/'])
(['Minimum Insertions/Deletions to Convert String | (DP- 30)'], ['https://leetcode.com/problems/delete-operation-for-two-strings/'])
(['Shortest Common Supersequence | (DP - 31)'], ['https://leetcode.com/problems/shortest-common-supersequence/'])
(['Distinct Subsequences| (DP-32)'], ['https://leetcode.com/problems/distinct-subsequences/'])
(['Edit Distance | (DP-33)'], ['https://leetcode.com/problems/edit-distance/'])
(['Wildcard Matching | (DP-34)'], ['https://leetcode.com/problems/wildcard-matching/'])
(['Best Time to Buy and Sell Stock |(DP-35)'], ['https://leetcode.com/problems/best-time-to-buy-and-sell-stock/'])
(['Buy and Sell Stock - II|(DP-36)'], ['https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/'])
(['Buy and Sell Stocks III|(DP-37)'], ['https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/description/'])
(['Buy and Stock Sell IV |(DP-38)'], ['https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/'])
(['Buy and Sell Stocks With Cooldown|(DP-39)'], ['https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/'])
(['Buy and Sell Stocks With Transaction Fee|(DP-40)'], ['https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/'])
(['Longest Increasing Subsequence |(DP-41)'], ['https://leetcode.com/problems/longest-increasing-subsequence/'])
(['Printing Longest Increasing Subsequence|(DP-42)'], ['https://bit.ly/3XiRbmG'])
(['Longest Increasing Subsequence |(DP-43)'], ['https://bit.ly/3Pxf84L'])
(['Largest Divisible Subset|(DP-44)'], ['https://leetcode.com/problems/largest-divisible-subset/'])
(['Longest String Chain|(DP-45)'], ['https://leetcode.com/problems/longest-string-chain/'])
(['Longest Bitonic Subsequence |(DP-46)'], ['https://practice.geeksforgeeks.org/problems/longest-bitonic-subsequence0824/1'])
(['Number of Longest Increasing Subsequences|(DP-47)'], ['https://leetcode.com/problems/number-of-longest-increasing-subsequence/'])
(['Matrix Chain Multiplication|(DP-48)'], ['https://bit.ly/3Cgg36D'])
(['Matrix Chain Multiplication | Bottom-Up|(DP-49)'], ['https://bit.ly/3Cgg36D'])
(['Minimum Cost to Cut the Stick|(DP-50)'], ['https://leetcode.com/problems/minimum-cost-to-cut-a-stick/'])
(['Burst Balloons|(DP-51)'], ['https://leetcode.com/problems/burst-balloons/'])
(['Evaluate Boolean Expression to True|(DP-52)'], ['https://leetcode.com/problems/parsing-a-boolean-expression/'])
(['Palindrome Partitioning - II|(DP-53)'], ['https://leetcode.com/problems/palindrome-partitioning-ii/'])
(['Partition Array for Maximum Sum|(DP-54)'], ['https://leetcode.com/problems/partition-array-for-maximum-sum/'])
(["Maximum Rectangle Area with all 1's|(DP-55)"], ['https://leetcode.com/problems/maximal-rectangle/'])
(['Count Square Submatrices with All Ones|(DP-56)'], ['https://leetcode.com/problems/count-square-submatrices-with-all-ones/'])
(['Implement TRIE | INSERT | SEARCH | STARTSWITH'], ['https://leetcode.com/problems/implement-trie-prefix-tree/'])
(['Implement Trie - 2 (Prefix Tree)', 'soon...'], ['https://bit.ly/3qwT4OL'])
(['Longest String with All Prefixes'], ['https://bit.ly/3n3kedU'])
(['Number of Distinct Substrings in a String'], ['https://bit.ly/3ocRQW0'])
(['Bit PreRequisites for TRIE Problems'], ['https://bit.ly/3Vw4XB1'])
(['Maximum XOR of two numbers in an array'], ['https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array/'])
(['Maximum XOR With an Element From Array'], ['https://leetcode.com/problems/maximum-xor-with-an-element-from-array/'])
(['Minimum number of bracket reversals needed to make an expression balancedsoon...'], ['https://leetcode.com/problems/minimum-add-to-make-parentheses-valid/'])
(['Count and saysoon...'], ['https://leetcode.com/problems/count-and-say/'])
(['Hashing In Strings | Theorysoon...'], ['https://bit.ly/3glak75'])
(['Rabin Karpsoon...'], ['https://leetcode.com/problems/repeated-string-match/discuss/416144/Rabin-Karp-algorithm-C%2B%2B-implementation'])
(['Z-Functionsoon...'], ['https://leetcode.com/problems/implement-strstr/'])
(['KMP algo / LPS(pi) arraysoon...'], ['https://leetcode.com/problems/implement-strstr/'])
(['Shortest Palindromesoon...'], ['https://leetcode.com/problems/shortest-palindrome/'])
(['Longest happy prefixsoon...'], ['https://leetcode.com/problems/longest-happy-prefix/'])
(['Count palindromic subsequence in given stringsoon...'], ['https://practice.geeksforgeeks.org/problems/count-palindromic-subsequences/1#:~:text=Given%20a%20string%20str%20of,formed%20from%20the%20string%20str.&amp;text=Your%20Task%3A,read%20input%20or%20print%20anything.'])
([], [None])
